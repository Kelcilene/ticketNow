<!DOCTYPE html>
<html lang="pt">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Histórico de Compras</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 0;
            background-color: #f4f4f4;
        }

        h1 {
            color: #333;
        }

        ul {
            list-style: none;
            padding: 0;
        }

        li {
            background: white;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
        }

        #ordersList li {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 8px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <a href="/ticket">Tickets</a>

    <h1>Histórico de Compras</h1>
    <ul id="ordersList"></ul>

    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2 id="modalTitle"></h2>
            <p id="modalDetails"></p>
        </div>
    </div>

    <script>
        const token = localStorage.getItem('token');

        async function fetchOrders() {
            try {
                const response = await fetch('/orders', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });

                if (!response.ok) throw new Error("Erro ao buscar histórico de compras");

                const data = await response.json();
                const orders = data;

                const groupedOrders = {};

                orders.forEach(order => {
                    if (order.ticket && order.ticket._id) {
                        const ticketId = order.ticket._id;

                        if (!groupedOrders[ticketId]) {
                            groupedOrders[ticketId] = {
                                ticketName: order.ticketName,
                                price: order.price,
                                quantityUsed: order.quantityUsed,
                                count: 0
                            };
                        }
                        else groupedOrders[ticketId].quantityUsed += order.quantityUsed;
                        groupedOrders[ticketId].count += 1;
                    }
                });

                const ordersList = document.getElementById('ordersList');
                ordersList.innerHTML = '';

                Object.keys(groupedOrders).forEach(ticketId => {
                    const order = groupedOrders[ticketId];
                    const listItem = document.createElement('li');
                    listItem.innerHTML = `
                ${order.quantityUsed}x ${order.ticketName} - R$ ${order.price} (Vezes que o item foi comprado: ${order.count})
                <button onclick="viewDetails('${ticketId}', ${order.quantityUsed})" style="margin-left: 10px;">Ver Detalhes</button>
            `;
                    ordersList.appendChild(listItem);
                });
            } catch (error) {
                alert(error.message);
            }
        }

        async function viewDetails(ticketId, quantityUsed) {
            try {
                const response = await fetch(`/tickets/${ticketId}`, {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });

                if (!response.ok) throw new Error("Erro ao buscar detalhes do ingresso");

                const ticket = await response.json();
                document.getElementById('modalTitle').innerText = ticket.name;
                document.getElementById('modalDetails').innerText = `Preço: R$ ${ticket.price}\nEstoque: ${ticket.stockInitial}\nComprado: ${quantityUsed}`;

                const modal = document.getElementById("myModal");
                modal.style.display = "block";
            } catch (error) {
                alert(error.message);
            }
        }

        document.querySelector('.close').onclick = function () {
            const modal = document.getElementById("myModal");
            modal.style.display = "none";
        }

        window.onclick = function (event) {
            const modal = document.getElementById("myModal");
            if (event.target === modal) {
                modal.style.display = "none";
            }
        }

        document.addEventListener('DOMContentLoaded', fetchOrders);
    </script>
</body>

</html>